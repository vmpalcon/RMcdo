!(function (a, b, c, d) {
  'use strict';
  function e() {
    var a,
      c,
      d = b.documentElement,
      e = 0,
      f = 1;
    return (
      (a = b.createElement('div')),
      (a.style.cssText = 'overflow:scroll;width:50px;height:50px;position:absolute;left:-100px;direction:rtl'),
      (c = b.createElement('div')),
      (c.style.cssText = 'width:100px;height:100px'),
      a.appendChild(c),
      d.appendChild(a),
      (e = a.offsetWidth - a.clientWidth),
      a.scrollLeft > 0 ? (f = 0) : ((a.scrollLeft = 1), 0 === a.scrollLeft && (f = -1)),
      d.removeChild(a),
      { width: e, rtl: f }
    );
  }
  function f() {
    var b = !1,
      c = Object.defineProperty({}, 'passive', {
        get: function () {
          b = !0;
        },
      });
    return a.addEventListener('test', null, c), !!b && { capture: !1, passive: !0 };
  }
  function g(a) {
    var c = a.charAt(0).toUpperCase() + a.slice(1),
      e = b.createElement('test'),
      f = [a, 'Webkit' + c];
    for (var g in f) if (e.style[f[g]] !== d) return f[g];
    return '';
  }
  function h(a, b, c) {
    var d = a.className.split(/\s+/),
      e = d.indexOf(b);
    c ? ~e || d.push(b) : ~e && d.splice(e, 1), (a.className = d.join(' '));
  }
  function i(a, b, c) {
    for (var e in b) !b.hasOwnProperty(e) || (a[e] !== d && c) || (a[e] = b[e]);
    return a;
  }
  function j(a, b, c) {
    var d, e;
    if (a.length) for (d = 0, e = a.length; d < e; d++) a[d][b].apply(a[d], c);
    else for (d in a) a[d][b].apply(a[d], c);
  }
  function k(a, b) {
    var c, d;
    return function () {
      var e = this,
        f = Date.now(),
        g = arguments;
      c && f < c + b
        ? (clearTimeout(d),
          (d = setTimeout(function () {
            (c = f), a.apply(e, g);
          }, b)))
        : ((c = f), a.apply(e, g));
    };
  }
  var l = function a(b, c) {
      return new a.Instance(b, c || {});
    },
    m = (l.globalSettings = { scrollMinUpdateInterval: 25, checkFrequency: 1e3, pauseCheck: !1 });
  (l.defaults = {
    preventParentScroll: !1,
    forceScrollbars: !1,
    scrollStopDelay: 300,
    maxTrackSize: 95,
    minTrackSize: 5,
    draggableTracks: !0,
    autoUpdate: !0,
    classPrefix: 'optiscroll-',
    wrapContent: !0,
    rtl: !1,
  }),
    (l.Instance = function (b, c) {
      (this.element = b),
        (this.settings = i(i({}, l.defaults), c || {})),
        'boolean' != typeof c.rtl && (this.settings.rtl = 'rtl' === a.getComputedStyle(b).direction),
        (this.cache = {}),
        this.init();
    }),
    (l.Instance.prototype = {
      init: function () {
        var a = this.element,
          b = this.settings,
          c = !1,
          d = (this.scrollEl = b.wrapContent ? p.createWrapper(a) : a.firstElementChild);
        h(d, b.classPrefix + 'content', !0),
          h(a, 'is-enabled' + (b.rtl ? ' is-rtl' : ''), !0),
          (this.scrollbars = { v: o('v', this), h: o('h', this) }),
          (q.scrollbarSpec.width || b.forceScrollbars) && (c = p.hideNativeScrollbars(d, b.rtl)),
          c && j(this.scrollbars, 'create'),
          q.isTouch && b.preventParentScroll && h(a, b.classPrefix + 'prevent', !0),
          this.update(),
          this.bind(),
          b.autoUpdate && q.instances.push(this),
          b.autoUpdate && !q.checkTimer && p.checkLoop();
      },
      bind: function () {
        var a = (this.listeners = {}),
          b = this.scrollEl;
        (a.scroll = k(n.scroll.bind(this), m.scrollMinUpdateInterval)),
          q.isTouch && ((a.touchstart = n.touchstart.bind(this)), (a.touchend = n.touchend.bind(this))),
          (a.mousewheel = a.wheel = n.wheel.bind(this));
        for (var c in a) b.addEventListener(c, a[c], q.passiveEvent);
      },
      update: function () {
        var a = this.scrollEl,
          c = this.cache,
          e = c.clientH,
          f = a.scrollHeight,
          g = a.clientHeight,
          h = a.scrollWidth,
          i = a.clientWidth;
        if (f !== c.scrollH || g !== c.clientH || h !== c.scrollW || i !== c.clientW) {
          if (((c.scrollH = f), (c.clientH = g), (c.scrollW = h), (c.clientW = i), e !== d)) {
            if (0 === f && 0 === g && !b.body.contains(this.element)) return this.destroy(), !1;
            this.fireCustomEvent('sizechange');
          }
          j(this.scrollbars, 'update');
        }
      },
      scrollTo: function (a, b, c) {
        var d,
          e,
          f,
          g,
          h = this.cache;
        (q.pauseCheck = !0),
          this.update(),
          (d = this.scrollEl.scrollLeft),
          (e = this.scrollEl.scrollTop),
          (f = +a),
          'left' === a && (f = 0),
          'right' === a && (f = h.scrollW - h.clientW),
          a === !1 && (f = d),
          (g = +b),
          'top' === b && (g = 0),
          'bottom' === b && (g = h.scrollH - h.clientH),
          b === !1 && (g = e),
          this.animateScroll(d, f, e, g, +c);
      },
      scrollIntoView: function (a, b, c) {
        var d,
          e,
          f,
          g,
          h,
          i,
          j,
          k,
          l,
          m,
          n,
          o,
          p = this.scrollEl;
        (q.pauseCheck = !0),
          this.update(),
          'string' == typeof a ? (a = p.querySelector(a)) : a.length && a.jquery && (a = a[0]),
          'number' == typeof c && (c = { top: c, right: c, bottom: c, left: c }),
          (c = c || {}),
          (d = a.getBoundingClientRect()),
          (e = p.getBoundingClientRect()),
          (l = n = p.scrollLeft),
          (m = o = p.scrollTop),
          (j = l + d.left - e.left),
          (k = m + d.top - e.top),
          (f = j - (c.left || 0)),
          (g = k - (c.top || 0)),
          (h = j + d.width - this.cache.clientW + (c.right || 0)),
          (i = k + d.height - this.cache.clientH + (c.bottom || 0)),
          f < l && (n = f),
          h > l && (n = h),
          g < m && (o = g),
          i > m && (o = i),
          this.animateScroll(l, n, m, o, +b);
      },
      animateScroll: function (b, d, e, f, g) {
        var h = this,
          i = this.scrollEl,
          j = Date.now();
        if (d !== b || f !== e) {
          if (0 === g) return (i.scrollLeft = d), void (i.scrollTop = f);
          isNaN(g) && (g = 15 * c.pow(c.max(c.abs(d - b), c.abs(f - e)), 0.54)),
            (function k() {
              var l = c.min(1, (Date.now() - j) / g),
                m = p.easingFunction(l);
              f !== e && (i.scrollTop = ~~(m * (f - e)) + e),
                d !== b && (i.scrollLeft = ~~(m * (d - b)) + b),
                (h.scrollAnimation = l < 1 ? a.requestAnimationFrame(k) : null);
            })();
        }
      },
      destroy: function () {
        var b,
          c = this,
          d = this.element,
          e = this.scrollEl,
          f = this.listeners;
        if (this.scrollEl) {
          for (var g in f) e.removeEventListener(g, f[g]);
          if ((j(this.scrollbars, 'remove'), !this.settings.contentElement)) {
            for (; (b = e.childNodes[0]); ) d.insertBefore(b, e);
            d.removeChild(e), (this.scrollEl = null);
          }
          h(d, this.settings.classPrefix + 'prevent', !1),
            h(d, 'is-enabled', !1),
            a.requestAnimationFrame(function () {
              var a = q.instances.indexOf(c);
              a > -1 && q.instances.splice(a, 1);
            });
        }
      },
      fireCustomEvent: function (a) {
        var c,
          d = this.cache,
          e = d.scrollH,
          f = d.scrollW;
        c = {
          scrollbarV: i({}, d.v),
          scrollbarH: i({}, d.h),
          scrollTop: d.v.position * e,
          scrollLeft: d.h.position * f,
          scrollBottom: (1 - d.v.position - d.v.size) * e,
          scrollRight: (1 - d.h.position - d.h.size) * f,
          scrollWidth: f,
          scrollHeight: e,
          clientWidth: d.clientW,
          clientHeight: d.clientH,
        };
        var g;
        'function' == typeof CustomEvent
          ? (g = new CustomEvent(a, { detail: c }))
          : ((g = b.createEvent('CustomEvent')), g.initCustomEvent(a, !1, !1, c)),
          this.element.dispatchEvent(g);
      },
    });
  var n = {
      scroll: function (a) {
        q.pauseCheck || this.fireCustomEvent('scrollstart'),
          (q.pauseCheck = !0),
          this.scrollbars.v.update(),
          this.scrollbars.h.update(),
          this.fireCustomEvent('scroll'),
          clearTimeout(this.cache.timerStop),
          (this.cache.timerStop = setTimeout(n.scrollStop.bind(this), this.settings.scrollStopDelay));
      },
      touchstart: function (a) {
        (q.pauseCheck = !1), this.scrollbars.v.update(), this.scrollbars.h.update(), n.wheel.call(this, a);
      },
      touchend: function (a) {
        clearTimeout(this.cache.timerStop);
      },
      scrollStop: function () {
        this.fireCustomEvent('scrollstop'), (q.pauseCheck = !1);
      },
      wheel: function (b) {
        var c = this.cache,
          d = c.v,
          e = c.h,
          f = this.settings.preventParentScroll && q.isTouch;
        a.cancelAnimationFrame(this.scrollAnimation),
          f && d.enabled && d.percent % 100 == 0 && (this.scrollEl.scrollTop = d.percent ? c.scrollH - c.clientH - 1 : 1),
          f && e.enabled && e.percent % 100 == 0 && (this.scrollEl.scrollLeft = e.percent ? c.scrollW - c.clientW - 1 : 1);
      },
    },
    o = function (d, e) {
      var f = 'v' === d,
        g = e.element,
        j = e.scrollEl,
        k = e.settings,
        l = e.cache,
        m = (l[d] = {}),
        n = f ? 'H' : 'W',
        o = 'client' + n,
        p = 'scroll' + n,
        r = f ? 'scrollTop' : 'scrollLeft',
        s = f ? ['top', 'bottom'] : ['left', 'right'],
        t = /^(mouse|touch|pointer)/,
        u = q.scrollbarSpec.rtl,
        v = !1,
        w = null,
        x = null,
        y = {
          dragData: null,
          dragStart: function (a) {
            a.preventDefault();
            var b = a.touches ? a.touches[0] : a;
            (y.dragData = { x: b.pageX, y: b.pageY, scroll: j[r] }), y.bind(!0, a.type.match(t)[1]);
          },
          dragMove: function (a) {
            var b,
              c,
              d = a.touches ? a.touches[0] : a,
              e = k.rtl && 1 === u && !f ? -1 : 1;
            a.preventDefault(),
              (b = f ? d.pageY - y.dragData.y : d.pageX - y.dragData.x),
              (c = b / l[o]),
              (j[r] = y.dragData.scroll + c * l[p] * e);
          },
          dragEnd: function (a) {
            (y.dragData = null), y.bind(!1, a.type.match(t)[1]);
          },
          bind: function (a, c) {
            var d = (a ? 'add' : 'remove') + 'EventListener',
              e = c + 'move',
              f = c + ('touch' === c ? 'end' : 'up');
            b[d](e, y.dragMove), b[d](f, y.dragEnd), b[d](c + 'cancel', y.dragEnd);
          },
        };
      return {
        toggle: function (a) {
          (v = a), x && h(g, 'has-' + d + 'track', v), (m.enabled = v);
        },
        create: function () {
          if (
            ((w = b.createElement('div')),
            (x = b.createElement('b')),
            (w.className = k.classPrefix + d),
            (x.className = k.classPrefix + d + 'track'),
            w.appendChild(x),
            g.appendChild(w),
            k.draggableTracks)
          ) {
            (a.PointerEvent ? ['pointerdown'] : ['touchstart', 'mousedown']).forEach(function (a) {
              x.addEventListener(a, y.dragStart);
            });
          }
        },
        update: function () {
          var a, b, d, e, f;
          (v || l[o] !== l[p]) &&
            ((d = this.calc()),
            (a = d.size),
            (b = m.size),
            (e = (1 / a) * d.position * 100),
            (f = c.abs(d.position - (m.position || 0)) * l[o]),
            1 === a && v && this.toggle(!1),
            a < 1 && !v && this.toggle(!0),
            x && v && this.style(e, f, a, b),
            (m = i(m, d)),
            v && this.fireEdgeEv());
        },
        style: function (a, b, c, d) {
          c !== d && ((x.style[f ? 'height' : 'width'] = 100 * c + '%'), k.rtl && !f && (x.style.marginRight = 100 * (1 - c) + '%')),
            (x.style[q.cssTransform] = 'translate(' + (f ? '0%,' + a + '%' : a + '%,0%') + ')');
        },
        calc: function () {
          var a,
            b,
            d = j[r],
            e = l[o],
            g = l[p],
            h = e / g,
            i = g - e;
          return h >= 1 || !g
            ? { position: 0, size: 1, percent: 0 }
            : (!f && k.rtl && u && (d = i - d * u),
              (b = (100 * d) / i),
              d <= 1 && (b = 0),
              d >= i - 1 && (b = 100),
              (h = c.max(h, k.minTrackSize / 100)),
              (h = c.min(h, k.maxTrackSize / 100)),
              (a = (b / 100) * (1 - h)),
              { position: a, size: h, percent: b });
        },
        fireEdgeEv: function () {
          var a = m.percent;
          m.was !== a && a % 100 == 0 && (e.fireCustomEvent('scrollreachedge'), e.fireCustomEvent('scrollreach' + s[a / 100])), (m.was = a);
        },
        remove: function () {
          this.toggle(!1), w && (w.parentNode.removeChild(w), (w = null));
        },
      };
    },
    p = {
      hideNativeScrollbars: function (a, b) {
        var c = q.scrollbarSpec.width,
          d = a.style;
        if (0 === c) {
          var e = Date.now();
          return (
            a.setAttribute('data-scroll', e), p.addCssRule('[data-scroll="' + e + '"]::-webkit-scrollbar', 'display:none;width:0;height:0;')
          );
        }
        return (d[b ? 'left' : 'right'] = -c + 'px'), (d.bottom = -c + 'px'), !0;
      },
      addCssRule: function (a, c) {
        var d = b.getElementById('scroll-sheet');
        d || ((d = b.createElement('style')), (d.id = 'scroll-sheet'), d.appendChild(b.createTextNode('')), b.head.appendChild(d));
        try {
          return d.sheet.insertRule(a + ' {' + c + '}', 0), !0;
        } catch (a) {
          return;
        }
      },
      createWrapper: function (a, c) {
        for (var d, e = b.createElement('div'); (d = a.childNodes[0]); ) e.appendChild(d);
        return a.appendChild(e);
      },
      checkLoop: function () {
        if (!q.instances.length) return void (q.checkTimer = null);
        q.pauseCheck || j(q.instances, 'update'),
          m.checkFrequency &&
            (q.checkTimer = setTimeout(function () {
              p.checkLoop();
            }, m.checkFrequency));
      },
      easingFunction: function (a) {
        return --a * a * a + 1;
      },
    },
    q = (l.G = {
      isTouch: 'ontouchstart' in a,
      cssTransition: g('transition'),
      cssTransform: g('transform'),
      scrollbarSpec: e(),
      passiveEvent: f(),
      instances: [],
      checkTimer: null,
      pauseCheck: !1,
    });
  'function' == typeof define &&
    define.amd &&
    define(function () {
      return l;
    }),
    'undefined' != typeof module && module.exports && (module.exports = l),
    (a.Optiscroll = l);
})(window, document, Math);
